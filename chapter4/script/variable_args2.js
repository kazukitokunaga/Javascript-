function printf(format){
  // 引数の2番目以降を順番に処理
  for (var i = 0, len = arguments.length; i < len; i++){
    var pattern = new RegExp('\\{' + (i -1) + '\\}', 'g');
    format = format.replace(pattern, arguments[i]);
  }
  console.log(format);
}

printf('こんにちは、{0}さん。私は{1}です。', '掛合', '山田');
// 結果：こんにちは、掛合さん。私は山田です。

/*
 * printf関数は、第1引数で指定された書式文字列に含まれる、
 * {0}、{1}、{2}...のようなプレイスホルダー（パラメーター置き場所）を、
 * 第2引数以降の値で置き換えたものを出力するための関数。
 *
 * ここで、第1引数だけが仮引数formatとして明示的に宣言されており、第2引数以降がいわゆる可変長引数として扱われている点に注目。
 * このようなケースでも、argumentsオブジェクトには、明示的に宣言された引数→可変長引数の順番で、すべての引数が格納される。
 * 可変長引数だけがargumentsオブジェクトで管理されるわけではない点に注意。
 *
 * つまり、argumentsオブジェクトの中身は、
 * [0]'こんにちは、{0}さん。私は{1}です。'
 * [1]'掛合'
 * [2]'山田'
 */